# General Code Style & Formatting

- Follow the Airbnb Style Guide for code formatting.
- Use PascalCase for React component file names (e.g., UserCard.tsx, not user-card.tsx).
- Prefer named exports for components.

# Project Structure & Architecture

- Follow Next.js patterns and use the App Router.
- Correctly determine when to use server vs. client components in Next.js.

# Styling & UI

- Use Tailwind CSS for styling.
- Use Shadcn UI for components.

# Data Fetching & Forms

- Use TanStack Query (react-query) for frontend data fetching.
- Use React Hook Form for form handling.
- Use Zod for validation.

# State Management & Logic

- Use React Context for state management.

# Backend & Database

Use Prisma for database access.

# TypeScript Best Practices

- Use TypeScript for all code; prefer interfaces over types.
- Avoid any and enums; use explicit types and maps instead.
- Use functional components with TypeScript interfaces.
- Enable strict mode in TypeScript for better type safety.

# Lens Protocol

- Use the @lens-protocol/client package for Lens Protocol integration.
- Use the @lens-protocol/react-web package for Lens Protocol React integration.
- use lens @lens-protocol-llm.txt file for reference.

# Web3

- Use the @lens-protocol/client package for Lens Protocol integration.
- Use the @lens-protocol/react-web package for Lens Protocol React integration.

- use pnpm for package manager

- never update anything in the docs folder
- use docs folder for reference and if you need any functionality from docs folder, create it in the src folder and use it from there
- use lens-protocol-llm.txt for reference
- please use docs even if they are in .gitignore

- always write code in smaller components style so it's easier to read and understand
